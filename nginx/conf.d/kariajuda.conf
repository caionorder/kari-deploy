# Kari Ajuda Nginx Configuration for Subdomains

# Upstream definitions
upstream api_backend {
    server api:8000;
}

upstream site_frontend {
    server site:80;
}

upstream admin_frontend {
    server admin:80;
}

# API Server - api.kariajuda.com
server {
    listen 80;
    server_name api.kariajuda.com;
    
    # Redirect to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.kariajuda.com;

    # SSL Configuration (certificates will be managed by Traefik/Let's Encrypt)
    ssl_certificate /etc/nginx/ssl/api.kariajuda.com.crt;
    ssl_certificate_key /etc/nginx/ssl/api.kariajuda.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # API rate limiting
    location / {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts for long-running requests
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Static files for API docs
    location /docs {
        proxy_pass http://api_backend/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /redoc {
        proxy_pass http://api_backend/redoc;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

# Main Site - kariajuda.com & www.kariajuda.com
server {
    listen 80;
    server_name kariajuda.com www.kariajuda.com;
    
    # Redirect to HTTPS
    return 301 https://kariajuda.com$request_uri;
}

server {
    listen 443 ssl http2;
    server_name www.kariajuda.com;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/kariajuda.com.crt;
    ssl_certificate_key /etc/nginx/ssl/kariajuda.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    # Redirect www to non-www
    return 301 https://kariajuda.com$request_uri;
}

server {
    listen 443 ssl http2;
    server_name kariajuda.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/kariajuda.com.crt;
    ssl_certificate_key /etc/nginx/ssl/kariajuda.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self' https://api.kariajuda.com; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;

    # General rate limiting
    location / {
        limit_req zone=general burst=5 nodelay;
        
        proxy_pass http://site_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://site_frontend;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# Admin Panel - admin.kariajuda.com
server {
    listen 80;
    server_name admin.kariajuda.com;
    
    # Redirect to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name admin.kariajuda.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/admin.kariajuda.com.crt;
    ssl_certificate_key /etc/nginx/ssl/admin.kariajuda.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self' https://api.kariajuda.com; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;

    # IP whitelist for admin (optional - uncomment to enable)
    # allow 192.168.1.0/24;  # Office network
    # allow 10.0.0.0/8;       # VPN
    # deny all;

    # Basic authentication (optional - uncomment to enable)
    # auth_basic "Admin Area";
    # auth_basic_user_file /etc/nginx/.htpasswd;

    # Admin rate limiting
    location / {
        limit_req zone=general burst=5 nodelay;
        
        proxy_pass http://admin_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://admin_frontend;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# Health check endpoint
server {
    listen 8081;
    server_name _;
    
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}